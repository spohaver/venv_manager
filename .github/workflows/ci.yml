name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run weekly 
    - cron: '0 0 * * 0'
  workflow_dispatch: # Allow manual triggers

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.x'  # Use latest available Python 3
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-dev.txt
        if [ -f setup.py ]; then pip install -e .; fi
    
    - name: Lint with flake8
      run: |
        flake8 *.py tests/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 *.py tests/ --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check *.py tests/
    
    - name: Run unit tests
      run: |
        python -m pytest tests/ -v --tb=short --cov=. --cov-report=xml --cov-report=term
    
    - name: Test script functionality
      run: |
        # Test help command
        ./venv-manager --help
        
        # Test basic functionality
        ./venv-manager list || echo "No environments found (expected)"
        
        # Create a test environment
        ./venv-manager --name ci-test-env --verbose
        
        # Verify it was created
        ./venv-manager list | grep "ci-test-env"
        
        # Test venv_shell creation
        if [ -f "./venv_shell" ]; then
          echo "✓ venv_shell activation script created successfully"
        else
          echo "✗ venv_shell activation script not found"
          exit 1
        fi
        
        # Clean up test environment
        ./venv-manager remove --name ci-test-env --force
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        fail_ci_if_error: false